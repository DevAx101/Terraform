name: Terraform-for-AppRunner_test

## Controls when the action will run.
on:
  workflow_run:
    workflows: ["tf-init-state"]
    branches:
    - feature/AppRunner
    # - main
    types: 
      - completed

  ## Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # ecr:
  #   name: 'ECR'
  #   runs-on: ubuntu-latest
  #   environment: test
  #   needs: [setup-tools, setup-s3]

  #   defaults:
  #     run:
  #       shell: bash

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Download terraform from setup-tools
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: terraform
   
  #   - name: Configure AWS credentials from AWS account (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION  )
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
  #       aws-region:            ${{ secrets.AWS_REGION }}

  #   - name: Setup enviroment variables
  #     run: |
  #       chmod +x terraform && sudo mv terraform /usr/local/bin/terraform
  #       source ./environment/${{ env.environment }}/.env && env >> $GITHUB_ENV
  #       echo AWS_REGION=${{ secrets.AWS_REGION }} >> $GITHUB_ENV
  #       echo TF_VAR_region=${{ secrets.AWS_REGION }} >> $GITHUB_ENV

  #   - name: Terraform Apply
  #     uses: ./.github/actions/apply
  #     with:
  #       dir: ./modules/ecr
  #       key: ${PROJECT_ID}-ecr

  #   - name: Archive tfplan
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: vpc-eks-tfplan
  #       path: ./modules/ecr/tfplan

  # pull-docker:
  #   name: 'Pull Docker to ECR'
  #   runs-on: ubuntu-latest
  #   environment: test
  #   needs: [setup-tools, ecr]

  #   defaults:
  #     run:
  #       shell: bash

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Download terraform from setup-tools
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: terraform
   
  #   - name: Configure AWS credentials from AWS account (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION  )
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
  #       aws-region:            ${{ secrets.AWS_REGION }}

  #   - name: Pull repo
  #     run: |
  #       chmod +x terraform && sudo mv terraform /usr/local/bin/terraform
  #       source ./environment/${{ env.environment }}/.env && env >> $GITHUB_ENV
  #       echo TF_VAR_region=${{ secrets.AWS_REGION }} >> $GITHUB_ENV
  #       ./pull-repo.sh

  app-runner:
    name: 'AppRunner-Github-Action'
    runs-on: ubuntu-latest
    environment: test
    # needs: [setup-tools, setup-s3]

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download terraform from setup-tools
      uses: actions/download-artifact@v2
      with:
        name: terraform
   
    - name: Configure AWS credentials from aws account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region:            ${{ secrets.AWS_REGION }}

    - name: Setup enviroment variables
      run: |
        chmod +x terraform && sudo mv terraform /usr/local/bin/terraform
        source ./environment/${{ env.environment }}/.env && env >> $GITHUB_ENV
        echo AWS_REGION=${{ secrets.AWS_REGION }}               >> $GITHUB_ENV
        echo TF_VAR_region=${{ secrets.AWS_REGION }}            >> $GITHUB_ENV

    - name: Terraform Apply
      uses: ./.github/actions/apply
      with:
        dir: ./modules/apprunner-github-action
        # key: ${PROJECT_ID}-XXX

    - name: Archive tfplan
      uses: actions/upload-artifact@v2
      with:
        name: apprunner-github-action-tfplan
        path: ./modules/apprunner-github-action/tfplan
